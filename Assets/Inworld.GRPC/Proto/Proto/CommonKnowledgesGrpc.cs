// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ai/inworld/studio/v1alpha/common_knowledges.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ai.Inworld.Studio.V1Alpha {
  /// <summary>
  /// Service to manage common knowledges for the Inworld characters.
  /// </summary>
  public static partial class CommonKnowledges
  {
    static readonly string __ServiceName = "ai.inworld.studio.v1alpha.CommonKnowledges";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest> __Marshaller_ai_inworld_studio_v1alpha_GetCommonKnowledgeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> __Marshaller_ai_inworld_studio_v1alpha_CommonKnowledge = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest> __Marshaller_ai_inworld_studio_v1alpha_ListCommonKnowledgesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse> __Marshaller_ai_inworld_studio_v1alpha_ListCommonKnowledgesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest> __Marshaller_ai_inworld_studio_v1alpha_UpdateCommonKnowledgeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest> __Marshaller_ai_inworld_studio_v1alpha_CreateCommonKnowledgeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest> __Marshaller_ai_inworld_studio_v1alpha_DeleteCommonKnowledgeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> __Method_GetCommonKnowledge = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommonKnowledge",
        __Marshaller_ai_inworld_studio_v1alpha_GetCommonKnowledgeRequest,
        __Marshaller_ai_inworld_studio_v1alpha_CommonKnowledge);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest, global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse> __Method_ListCommonKnowledges = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest, global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCommonKnowledges",
        __Marshaller_ai_inworld_studio_v1alpha_ListCommonKnowledgesRequest,
        __Marshaller_ai_inworld_studio_v1alpha_ListCommonKnowledgesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> __Method_UpdateCommonKnowledge = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCommonKnowledge",
        __Marshaller_ai_inworld_studio_v1alpha_UpdateCommonKnowledgeRequest,
        __Marshaller_ai_inworld_studio_v1alpha_CommonKnowledge);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> __Method_CreateCommonKnowledge = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCommonKnowledge",
        __Marshaller_ai_inworld_studio_v1alpha_CreateCommonKnowledgeRequest,
        __Marshaller_ai_inworld_studio_v1alpha_CommonKnowledge);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCommonKnowledge = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCommonKnowledge",
        __Marshaller_ai_inworld_studio_v1alpha_DeleteCommonKnowledgeRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ai.Inworld.Studio.V1Alpha.CommonKnowledgesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CommonKnowledges</summary>
    [grpc::BindServiceMethod(typeof(CommonKnowledges), "BindService")]
    public abstract partial class CommonKnowledgesBase
    {
      /// <summary>
      /// Returns one specified common knowledge.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> GetCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Return list of common knowledges.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse> ListCommonKnowledges(global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates one specified common knowledge.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> UpdateCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a common knowledge.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> CreateCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a common knowledge.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CommonKnowledges</summary>
    public partial class CommonKnowledgesClient : grpc::ClientBase<CommonKnowledgesClient>
    {
      /// <summary>Creates a new client for CommonKnowledges</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CommonKnowledgesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CommonKnowledges that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CommonKnowledgesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CommonKnowledgesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CommonKnowledgesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge GetCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommonKnowledge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge GetCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCommonKnowledge, null, options, request);
      }
      /// <summary>
      /// Returns one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> GetCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCommonKnowledgeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> GetCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCommonKnowledge, null, options, request);
      }
      /// <summary>
      /// Return list of common knowledges.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse ListCommonKnowledges(global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCommonKnowledges(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Return list of common knowledges.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse ListCommonKnowledges(global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCommonKnowledges, null, options, request);
      }
      /// <summary>
      /// Return list of common knowledges.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse> ListCommonKnowledgesAsync(global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCommonKnowledgesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Return list of common knowledges.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse> ListCommonKnowledgesAsync(global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCommonKnowledges, null, options, request);
      }
      /// <summary>
      /// Updates one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge UpdateCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCommonKnowledge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge UpdateCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCommonKnowledge, null, options, request);
      }
      /// <summary>
      /// Updates one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> UpdateCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCommonKnowledgeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates one specified common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> UpdateCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCommonKnowledge, null, options, request);
      }
      /// <summary>
      /// Creates a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge CreateCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCommonKnowledge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge CreateCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCommonKnowledge, null, options, request);
      }
      /// <summary>
      /// Creates a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> CreateCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCommonKnowledgeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge> CreateCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCommonKnowledge, null, options, request);
      }
      /// <summary>
      /// Deletes a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCommonKnowledge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCommonKnowledge(global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCommonKnowledge, null, options, request);
      }
      /// <summary>
      /// Deletes a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCommonKnowledgeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a common knowledge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCommonKnowledgeAsync(global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCommonKnowledge, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CommonKnowledgesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CommonKnowledgesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CommonKnowledgesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetCommonKnowledge, serviceImpl.GetCommonKnowledge)
          .AddMethod(__Method_ListCommonKnowledges, serviceImpl.ListCommonKnowledges)
          .AddMethod(__Method_UpdateCommonKnowledge, serviceImpl.UpdateCommonKnowledge)
          .AddMethod(__Method_CreateCommonKnowledge, serviceImpl.CreateCommonKnowledge)
          .AddMethod(__Method_DeleteCommonKnowledge, serviceImpl.DeleteCommonKnowledge).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CommonKnowledgesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetCommonKnowledge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.GetCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge>(serviceImpl.GetCommonKnowledge));
      serviceBinder.AddMethod(__Method_ListCommonKnowledges, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesRequest, global::Ai.Inworld.Studio.V1Alpha.ListCommonKnowledgesResponse>(serviceImpl.ListCommonKnowledges));
      serviceBinder.AddMethod(__Method_UpdateCommonKnowledge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.UpdateCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge>(serviceImpl.UpdateCommonKnowledge));
      serviceBinder.AddMethod(__Method_CreateCommonKnowledge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.CreateCommonKnowledgeRequest, global::Ai.Inworld.Studio.V1Alpha.CommonKnowledge>(serviceImpl.CreateCommonKnowledge));
      serviceBinder.AddMethod(__Method_DeleteCommonKnowledge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.DeleteCommonKnowledgeRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCommonKnowledge));
    }

  }
}
#endregion
