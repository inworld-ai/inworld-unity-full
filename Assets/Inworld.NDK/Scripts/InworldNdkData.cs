// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: inworld_ndkData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Inworld.NDK {

  /// <summary>Holder for reflection information generated from inworld_ndkData.proto</summary>
  public static partial class InworldNdkDataReflection {

    #region Descriptor
    /// <summary>File descriptor for inworld_ndkData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InworldNdkDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVpbndvcmxkX25ka0RhdGEucHJvdG8SD2lud29ybGQubmRrRGF0YRoZZ29v",
            "Z2xlL3Byb3RvYnVmL2FueS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVz",
            "dGFtcC5wcm90byJ8CgVUb2tlbhINCgV0b2tlbhgBIAEoCRIMCgR0eXBlGAIg",
            "ASgJEjIKDmV4cGlyYXRpb25UaW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIRCglzZXNzaW9uSWQYBCABKAkSDwoHSXNWYWxpZBgFIAEo",
            "CCLeAQoQTG9hZFNjZW5lUmVxdWVzdBIuCgZjbGllbnQYASABKAsyHi5pbndv",
            "cmxkLm5ka0RhdGEuQ2xpZW50UmVxdWVzdBIqCgR1c2VyGAIgASgLMhwuaW53",
            "b3JsZC5uZGtEYXRhLlVzZXJSZXF1ZXN0EjoKDGNhcGFiaWxpdGllcxgDIAEo",
            "CzIkLmlud29ybGQubmRrRGF0YS5DYXBhYmlsaXRpZXNSZXF1ZXN0EjIKC3Vz",
            "ZXJTZXR0aW5nGAQgASgLMh0uaW53b3JsZC5uZGtEYXRhLlVzZXJTZXR0aW5n",
            "cyKEAQoRTG9hZFNjZW5lUmVzcG9uc2USNQoGYWdlbnRzGAEgAygLMiUuaW53",
            "b3JsZC5uZGtEYXRhLklud29ybGRDaGFyYWN0ZXJEYXRhEgsKA2tleRgCIAEo",
            "CRIrCg1wcmV2aW91c1N0YXRlGAMgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFu",
            "eSIbCgtVc2VyUmVxdWVzdBIMCgRuYW1lGAEgASgJImQKDFVzZXJTZXR0aW5n",
            "cxIdChV2aWV3VHJhbnNjcmlwdENvbnNlbnQYASABKAgSNQoNcGxheWVyUHJv",
            "ZmlsZRgCIAEoCzIeLmlud29ybGQubmRrRGF0YS5QbGF5ZXJQcm9maWxlIjgK",
            "DVBsYXllclByb2ZpbGUSJwoGZmllbGRzGAEgAygLMhcuaW53b3JsZC5uZGtE",
            "YXRhLkZpZWxkcyItCgZGaWVsZHMSDwoHZmllbGRJZBgBIAEoCRISCgpmaWVs",
            "ZFZhbHVlGAIgASgJIiwKDUNsaWVudFJlcXVlc3QSCgoCaWQYASABKAkSDwoH",
            "dmVyc2lvbhgCIAEoCSLLAgoTQ2FwYWJpbGl0aWVzUmVxdWVzdBINCgVhdWRp",
            "bxgBIAEoCBIQCghlbW90aW9ucxgCIAEoCBIVCg1pbnRlcnJ1cHRpb25zGAMg",
            "ASgIEhcKD25hcnJhdGVkQWN0aW9ucxgEIAEoCBIPCgdzaWxlbmNlGAUgASgI",
            "EgwKBHRleHQYBiABKAgSEAoIdHJpZ2dlcnMYByABKAgSFAoMY29udGludWF0",
            "aW9uGAggASgIEhQKDHR1cm5CYXNlZFN0dBgJIAEoCBITCgtwaG9uZW1lSW5m",
            "bxgKIAEoCBISCgphbmltYXRpb25zGAsgASgIEhAKCGdlc3R1cmVzGAwgASgI",
            "EhgKEGVtb3Rpb25zdHJlYW1pbmcYDSABKAgSFQoNc2lsZW5jZWV2ZW50cxgO",
            "IAEoCBIaChJsb2Fkc2NlbmVpbnNlc3Npb24YDyABKAgimwEKFElud29ybGRD",
            "aGFyYWN0ZXJEYXRhEg8KB2FnZW50SWQYASABKAkSEQoJYnJhaW5OYW1lGAIg",
            "ASgJEhEKCWdpdmVuTmFtZRgDIAEoCRI5Cg9jaGFyYWN0ZXJBc3NldHMYBCAB",
            "KAsyIC5pbndvcmxkLm5ka0RhdGEuQ2hhcmFjdGVyQXNzZXRzEhEKCXRodW1i",
            "bmFpbBgFIAEoDCKNAQoPQ2hhcmFjdGVyQXNzZXRzEhMKC3JwbU1vZGVsVXJp",
            "GAEgASgJEhsKE3JwbUltYWdlVXJpUG9ydHJhaXQYAiABKAkSGgoScnBtSW1h",
            "Z2VVcmlQb3N0dXJlGAMgASgJEhEKCWF2YXRhckltZxgEIAEoCRIZChFhdmF0",
            "YXJJbWdPcmlnaW5hbBgFIAEoCSLhAQoNQ2xpZW50T3B0aW9ucxISCgpzZXJ2",
            "ZXJfdXJsGAIgASgJEhIKCnNjZW5lX25hbWUYAyABKAkSDwoHYXBpX2tleRgE",
            "IAEoCRISCgphcGlfc2VjcmV0GAUgASgJEhMKC3BsYXllcl9uYW1lGAYgASgJ",
            "Eg0KBXRva2VuGAcgASgJEhIKCnNlc3Npb25faWQYCCABKAkSDwoHdXNlcl9p",
            "ZBgJIAEoCRI6CgxjYXBhYmlsaXRpZXMYCiABKAsyJC5pbndvcmxkLm5ka0Rh",
            "dGEuQ2FwYWJpbGl0aWVzUmVxdWVzdCJCCglBZ2VudEluZm8SEQoJQnJhaW5O",
            "YW1lGAEgASgJEg8KB0FnZW50SWQYAiABKAkSEQoJR2l2ZW5OYW1lGAMgASgJ",
            "IlgKC1Nlc3Npb25JbmZvEhEKCVNlc3Npb25JZBgBIAEoCRINCgVUb2tlbhgC",
            "IAEoCRIWCg5FeHBpcmF0aW9uVGltZRgDIAEoAxIPCgdJc1ZhbGlkGAQgASgI",
            "IkUKDkFnZW50SW5mb0FycmF5EjMKD2FnZW50X2luZm9fbGlzdBgBIAMoCzIa",
            "Lmlud29ybGQubmRrRGF0YS5BZ2VudEluZm8qdgoPQ29ubmVjdGlvblN0YXRl",
            "EggKBElkbGUQABIOCgpDb25uZWN0aW5nEAESDQoJQ29ubmVjdGVkEAISCgoG",
            "RmFpbGVkEAMSCgoGUGF1c2VkEAQSEAoMRGlzY29ubmVjdGVkEAUSEAoMUmVj",
            "b25uZWN0aW5nEAZCDqoCC0lud29ybGQuTkRLYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Inworld.NDK.ConnectionState), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.Token), global::Inworld.NDK.Token.Parser, new[]{ "Token_", "Type", "ExpirationTime", "SessionId", "IsValid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.LoadSceneRequest), global::Inworld.NDK.LoadSceneRequest.Parser, new[]{ "Client", "User", "Capabilities", "UserSetting" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.LoadSceneResponse), global::Inworld.NDK.LoadSceneResponse.Parser, new[]{ "Agents", "Key", "PreviousState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.UserRequest), global::Inworld.NDK.UserRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.UserSettings), global::Inworld.NDK.UserSettings.Parser, new[]{ "ViewTranscriptConsent", "PlayerProfile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.PlayerProfile), global::Inworld.NDK.PlayerProfile.Parser, new[]{ "Fields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.Fields), global::Inworld.NDK.Fields.Parser, new[]{ "FieldId", "FieldValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.ClientRequest), global::Inworld.NDK.ClientRequest.Parser, new[]{ "Id", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.CapabilitiesRequest), global::Inworld.NDK.CapabilitiesRequest.Parser, new[]{ "Audio", "Emotions", "Interruptions", "NarratedActions", "Silence", "Text", "Triggers", "Continuation", "TurnBasedStt", "PhonemeInfo", "Animations", "Gestures", "Emotionstreaming", "Silenceevents", "Loadsceneinsession" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.InworldCharacterData), global::Inworld.NDK.InworldCharacterData.Parser, new[]{ "AgentId", "BrainName", "GivenName", "CharacterAssets", "Thumbnail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.CharacterAssets), global::Inworld.NDK.CharacterAssets.Parser, new[]{ "RpmModelUri", "RpmImageUriPortrait", "RpmImageUriPosture", "AvatarImg", "AvatarImgOriginal" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.ClientOptions), global::Inworld.NDK.ClientOptions.Parser, new[]{ "ServerUrl", "SceneName", "ApiKey", "ApiSecret", "PlayerName", "Token", "SessionId", "UserId", "Capabilities" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.AgentInfo), global::Inworld.NDK.AgentInfo.Parser, new[]{ "BrainName", "AgentId", "GivenName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.SessionInfo), global::Inworld.NDK.SessionInfo.Parser, new[]{ "SessionId", "Token", "ExpirationTime", "IsValid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inworld.NDK.AgentInfoArray), global::Inworld.NDK.AgentInfoArray.Parser, new[]{ "AgentInfoList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ConnectionState {
    [pbr::OriginalName("Idle")] Idle = 0,
    [pbr::OriginalName("Connecting")] Connecting = 1,
    [pbr::OriginalName("Connected")] Connected = 2,
    [pbr::OriginalName("Failed")] Failed = 3,
    [pbr::OriginalName("Paused")] Paused = 4,
    [pbr::OriginalName("Disconnected")] Disconnected = 5,
    [pbr::OriginalName("Reconnecting")] Reconnecting = 6,
  }

  #endregion

  #region Messages
  public sealed partial class Token : pb::IMessage<Token>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Token> _parser = new pb::MessageParser<Token>(() => new Token());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Token> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token(Token other) : this() {
      token_ = other.token_;
      type_ = other.type_;
      expirationTime_ = other.expirationTime_ != null ? other.expirationTime_.Clone() : null;
      sessionId_ = other.sessionId_;
      isValid_ = other.isValid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token Clone() {
      return new Token(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int Token_FieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token_ {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expirationTime" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "sessionId" field.</summary>
    public const int SessionIdFieldNumber = 4;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsValid" field.</summary>
    public const int IsValidFieldNumber = 5;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Token);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Token other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token_ != other.Token_) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(ExpirationTime, other.ExpirationTime)) return false;
      if (SessionId != other.SessionId) return false;
      if (IsValid != other.IsValid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token_.Length != 0) hash ^= Token_.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (expirationTime_ != null) hash ^= ExpirationTime.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Token_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token_);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpirationTime);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionId);
      }
      if (IsValid != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsValid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Token_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token_);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpirationTime);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionId);
      }
      if (IsValid != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsValid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token_);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (expirationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationTime);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (IsValid != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Token other) {
      if (other == null) {
        return;
      }
      if (other.Token_.Length != 0) {
        Token_ = other.Token_;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.expirationTime_ != null) {
        if (expirationTime_ == null) {
          ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpirationTime.MergeFrom(other.ExpirationTime);
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token_ = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            if (expirationTime_ == null) {
              ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpirationTime);
            break;
          }
          case 34: {
            SessionId = input.ReadString();
            break;
          }
          case 40: {
            IsValid = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token_ = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            if (expirationTime_ == null) {
              ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpirationTime);
            break;
          }
          case 34: {
            SessionId = input.ReadString();
            break;
          }
          case 40: {
            IsValid = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadSceneRequest : pb::IMessage<LoadSceneRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadSceneRequest> _parser = new pb::MessageParser<LoadSceneRequest>(() => new LoadSceneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadSceneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadSceneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadSceneRequest(LoadSceneRequest other) : this() {
      client_ = other.client_ != null ? other.client_.Clone() : null;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      capabilities_ = other.capabilities_ != null ? other.capabilities_.Clone() : null;
      userSetting_ = other.userSetting_ != null ? other.userSetting_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadSceneRequest Clone() {
      return new LoadSceneRequest(this);
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 1;
    private global::Inworld.NDK.ClientRequest client_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Inworld.NDK.ClientRequest Client {
      get { return client_; }
      set {
        client_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Inworld.NDK.UserRequest user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Inworld.NDK.UserRequest User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "capabilities" field.</summary>
    public const int CapabilitiesFieldNumber = 3;
    private global::Inworld.NDK.CapabilitiesRequest capabilities_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Inworld.NDK.CapabilitiesRequest Capabilities {
      get { return capabilities_; }
      set {
        capabilities_ = value;
      }
    }

    /// <summary>Field number for the "userSetting" field.</summary>
    public const int UserSettingFieldNumber = 4;
    private global::Inworld.NDK.UserSettings userSetting_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Inworld.NDK.UserSettings UserSetting {
      get { return userSetting_; }
      set {
        userSetting_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadSceneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadSceneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Client, other.Client)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Capabilities, other.Capabilities)) return false;
      if (!object.Equals(UserSetting, other.UserSetting)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (client_ != null) hash ^= Client.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (capabilities_ != null) hash ^= Capabilities.GetHashCode();
      if (userSetting_ != null) hash ^= UserSetting.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (capabilities_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Capabilities);
      }
      if (userSetting_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserSetting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (client_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Client);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (capabilities_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Capabilities);
      }
      if (userSetting_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserSetting);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (client_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Client);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (capabilities_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Capabilities);
      }
      if (userSetting_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserSetting);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadSceneRequest other) {
      if (other == null) {
        return;
      }
      if (other.client_ != null) {
        if (client_ == null) {
          Client = new global::Inworld.NDK.ClientRequest();
        }
        Client.MergeFrom(other.Client);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Inworld.NDK.UserRequest();
        }
        User.MergeFrom(other.User);
      }
      if (other.capabilities_ != null) {
        if (capabilities_ == null) {
          Capabilities = new global::Inworld.NDK.CapabilitiesRequest();
        }
        Capabilities.MergeFrom(other.Capabilities);
      }
      if (other.userSetting_ != null) {
        if (userSetting_ == null) {
          UserSetting = new global::Inworld.NDK.UserSettings();
        }
        UserSetting.MergeFrom(other.UserSetting);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Inworld.NDK.ClientRequest();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Inworld.NDK.UserRequest();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            if (capabilities_ == null) {
              Capabilities = new global::Inworld.NDK.CapabilitiesRequest();
            }
            input.ReadMessage(Capabilities);
            break;
          }
          case 34: {
            if (userSetting_ == null) {
              UserSetting = new global::Inworld.NDK.UserSettings();
            }
            input.ReadMessage(UserSetting);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (client_ == null) {
              Client = new global::Inworld.NDK.ClientRequest();
            }
            input.ReadMessage(Client);
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Inworld.NDK.UserRequest();
            }
            input.ReadMessage(User);
            break;
          }
          case 26: {
            if (capabilities_ == null) {
              Capabilities = new global::Inworld.NDK.CapabilitiesRequest();
            }
            input.ReadMessage(Capabilities);
            break;
          }
          case 34: {
            if (userSetting_ == null) {
              UserSetting = new global::Inworld.NDK.UserSettings();
            }
            input.ReadMessage(UserSetting);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoadSceneResponse : pb::IMessage<LoadSceneResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadSceneResponse> _parser = new pb::MessageParser<LoadSceneResponse>(() => new LoadSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadSceneResponse(LoadSceneResponse other) : this() {
      agents_ = other.agents_.Clone();
      key_ = other.key_;
      previousState_ = other.previousState_ != null ? other.previousState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadSceneResponse Clone() {
      return new LoadSceneResponse(this);
    }

    /// <summary>Field number for the "agents" field.</summary>
    public const int AgentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Inworld.NDK.InworldCharacterData> _repeated_agents_codec
        = pb::FieldCodec.ForMessage(10, global::Inworld.NDK.InworldCharacterData.Parser);
    private readonly pbc::RepeatedField<global::Inworld.NDK.InworldCharacterData> agents_ = new pbc::RepeatedField<global::Inworld.NDK.InworldCharacterData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Inworld.NDK.InworldCharacterData> Agents {
      get { return agents_; }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "previousState" field.</summary>
    public const int PreviousStateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any previousState_;
    /// <summary>
    /// TODO: Solve packets from saved data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any PreviousState {
      get { return previousState_; }
      set {
        previousState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!agents_.Equals(other.agents_)) return false;
      if (Key != other.Key) return false;
      if (!object.Equals(PreviousState, other.PreviousState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= agents_.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (previousState_ != null) hash ^= PreviousState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      agents_.WriteTo(output, _repeated_agents_codec);
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (previousState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PreviousState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      agents_.WriteTo(ref output, _repeated_agents_codec);
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (previousState_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PreviousState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += agents_.CalculateSize(_repeated_agents_codec);
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (previousState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadSceneResponse other) {
      if (other == null) {
        return;
      }
      agents_.Add(other.agents_);
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.previousState_ != null) {
        if (previousState_ == null) {
          PreviousState = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        PreviousState.MergeFrom(other.PreviousState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            agents_.AddEntriesFrom(input, _repeated_agents_codec);
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            if (previousState_ == null) {
              PreviousState = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PreviousState);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            agents_.AddEntriesFrom(ref input, _repeated_agents_codec);
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            if (previousState_ == null) {
              PreviousState = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PreviousState);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserRequest : pb::IMessage<UserRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRequest> _parser = new pb::MessageParser<UserRequest>(() => new UserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequest(UserRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequest Clone() {
      return new UserRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserSettings : pb::IMessage<UserSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserSettings> _parser = new pb::MessageParser<UserSettings>(() => new UserSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings(UserSettings other) : this() {
      viewTranscriptConsent_ = other.viewTranscriptConsent_;
      playerProfile_ = other.playerProfile_ != null ? other.playerProfile_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings Clone() {
      return new UserSettings(this);
    }

    /// <summary>Field number for the "viewTranscriptConsent" field.</summary>
    public const int ViewTranscriptConsentFieldNumber = 1;
    private bool viewTranscriptConsent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ViewTranscriptConsent {
      get { return viewTranscriptConsent_; }
      set {
        viewTranscriptConsent_ = value;
      }
    }

    /// <summary>Field number for the "playerProfile" field.</summary>
    public const int PlayerProfileFieldNumber = 2;
    private global::Inworld.NDK.PlayerProfile playerProfile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Inworld.NDK.PlayerProfile PlayerProfile {
      get { return playerProfile_; }
      set {
        playerProfile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViewTranscriptConsent != other.ViewTranscriptConsent) return false;
      if (!object.Equals(PlayerProfile, other.PlayerProfile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ViewTranscriptConsent != false) hash ^= ViewTranscriptConsent.GetHashCode();
      if (playerProfile_ != null) hash ^= PlayerProfile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ViewTranscriptConsent != false) {
        output.WriteRawTag(8);
        output.WriteBool(ViewTranscriptConsent);
      }
      if (playerProfile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerProfile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ViewTranscriptConsent != false) {
        output.WriteRawTag(8);
        output.WriteBool(ViewTranscriptConsent);
      }
      if (playerProfile_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerProfile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ViewTranscriptConsent != false) {
        size += 1 + 1;
      }
      if (playerProfile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerProfile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSettings other) {
      if (other == null) {
        return;
      }
      if (other.ViewTranscriptConsent != false) {
        ViewTranscriptConsent = other.ViewTranscriptConsent;
      }
      if (other.playerProfile_ != null) {
        if (playerProfile_ == null) {
          PlayerProfile = new global::Inworld.NDK.PlayerProfile();
        }
        PlayerProfile.MergeFrom(other.PlayerProfile);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ViewTranscriptConsent = input.ReadBool();
            break;
          }
          case 18: {
            if (playerProfile_ == null) {
              PlayerProfile = new global::Inworld.NDK.PlayerProfile();
            }
            input.ReadMessage(PlayerProfile);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ViewTranscriptConsent = input.ReadBool();
            break;
          }
          case 18: {
            if (playerProfile_ == null) {
              PlayerProfile = new global::Inworld.NDK.PlayerProfile();
            }
            input.ReadMessage(PlayerProfile);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerProfile : pb::IMessage<PlayerProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerProfile> _parser = new pb::MessageParser<PlayerProfile>(() => new PlayerProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerProfile(PlayerProfile other) : this() {
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerProfile Clone() {
      return new PlayerProfile(this);
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Inworld.NDK.Fields> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(10, global::Inworld.NDK.Fields.Parser);
    private readonly pbc::RepeatedField<global::Inworld.NDK.Fields> fields_ = new pbc::RepeatedField<global::Inworld.NDK.Fields>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Inworld.NDK.Fields> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerProfile other) {
      if (other == null) {
        return;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Fields : pb::IMessage<Fields>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Fields> _parser = new pb::MessageParser<Fields>(() => new Fields());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fields> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fields() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fields(Fields other) : this() {
      fieldId_ = other.fieldId_;
      fieldValue_ = other.fieldValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fields Clone() {
      return new Fields(this);
    }

    /// <summary>Field number for the "fieldId" field.</summary>
    public const int FieldIdFieldNumber = 1;
    private string fieldId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldId {
      get { return fieldId_; }
      set {
        fieldId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fieldValue" field.</summary>
    public const int FieldValueFieldNumber = 2;
    private string fieldValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldValue {
      get { return fieldValue_; }
      set {
        fieldValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fields other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldId != other.FieldId) return false;
      if (FieldValue != other.FieldValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldId.Length != 0) hash ^= FieldId.GetHashCode();
      if (FieldValue.Length != 0) hash ^= FieldValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FieldId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldId);
      }
      if (FieldValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FieldValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FieldId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldId);
      }
      if (FieldValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FieldValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldId);
      }
      if (FieldValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fields other) {
      if (other == null) {
        return;
      }
      if (other.FieldId.Length != 0) {
        FieldId = other.FieldId;
      }
      if (other.FieldValue.Length != 0) {
        FieldValue = other.FieldValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldId = input.ReadString();
            break;
          }
          case 18: {
            FieldValue = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FieldId = input.ReadString();
            break;
          }
          case 18: {
            FieldValue = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientRequest : pb::IMessage<ClientRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientRequest> _parser = new pb::MessageParser<ClientRequest>(() => new ClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest(ClientRequest other) : this() {
      id_ = other.id_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest Clone() {
      return new ClientRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CapabilitiesRequest : pb::IMessage<CapabilitiesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CapabilitiesRequest> _parser = new pb::MessageParser<CapabilitiesRequest>(() => new CapabilitiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CapabilitiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilitiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilitiesRequest(CapabilitiesRequest other) : this() {
      audio_ = other.audio_;
      emotions_ = other.emotions_;
      interruptions_ = other.interruptions_;
      narratedActions_ = other.narratedActions_;
      silence_ = other.silence_;
      text_ = other.text_;
      triggers_ = other.triggers_;
      continuation_ = other.continuation_;
      turnBasedStt_ = other.turnBasedStt_;
      phonemeInfo_ = other.phonemeInfo_;
      animations_ = other.animations_;
      gestures_ = other.gestures_;
      emotionstreaming_ = other.emotionstreaming_;
      silenceevents_ = other.silenceevents_;
      loadsceneinsession_ = other.loadsceneinsession_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapabilitiesRequest Clone() {
      return new CapabilitiesRequest(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private bool audio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Audio {
      get { return audio_; }
      set {
        audio_ = value;
      }
    }

    /// <summary>Field number for the "emotions" field.</summary>
    public const int EmotionsFieldNumber = 2;
    private bool emotions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Emotions {
      get { return emotions_; }
      set {
        emotions_ = value;
      }
    }

    /// <summary>Field number for the "interruptions" field.</summary>
    public const int InterruptionsFieldNumber = 3;
    private bool interruptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Interruptions {
      get { return interruptions_; }
      set {
        interruptions_ = value;
      }
    }

    /// <summary>Field number for the "narratedActions" field.</summary>
    public const int NarratedActionsFieldNumber = 4;
    private bool narratedActions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NarratedActions {
      get { return narratedActions_; }
      set {
        narratedActions_ = value;
      }
    }

    /// <summary>Field number for the "silence" field.</summary>
    public const int SilenceFieldNumber = 5;
    private bool silence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Silence {
      get { return silence_; }
      set {
        silence_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 6;
    private bool text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Text {
      get { return text_; }
      set {
        text_ = value;
      }
    }

    /// <summary>Field number for the "triggers" field.</summary>
    public const int TriggersFieldNumber = 7;
    private bool triggers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Triggers {
      get { return triggers_; }
      set {
        triggers_ = value;
      }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 8;
    private bool continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Continuation {
      get { return continuation_; }
      set {
        continuation_ = value;
      }
    }

    /// <summary>Field number for the "turnBasedStt" field.</summary>
    public const int TurnBasedSttFieldNumber = 9;
    private bool turnBasedStt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TurnBasedStt {
      get { return turnBasedStt_; }
      set {
        turnBasedStt_ = value;
      }
    }

    /// <summary>Field number for the "phonemeInfo" field.</summary>
    public const int PhonemeInfoFieldNumber = 10;
    private bool phonemeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PhonemeInfo {
      get { return phonemeInfo_; }
      set {
        phonemeInfo_ = value;
      }
    }

    /// <summary>Field number for the "animations" field.</summary>
    public const int AnimationsFieldNumber = 11;
    private bool animations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Animations {
      get { return animations_; }
      set {
        animations_ = value;
      }
    }

    /// <summary>Field number for the "gestures" field.</summary>
    public const int GesturesFieldNumber = 12;
    private bool gestures_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Gestures {
      get { return gestures_; }
      set {
        gestures_ = value;
      }
    }

    /// <summary>Field number for the "emotionstreaming" field.</summary>
    public const int EmotionstreamingFieldNumber = 13;
    private bool emotionstreaming_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Emotionstreaming {
      get { return emotionstreaming_; }
      set {
        emotionstreaming_ = value;
      }
    }

    /// <summary>Field number for the "silenceevents" field.</summary>
    public const int SilenceeventsFieldNumber = 14;
    private bool silenceevents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Silenceevents {
      get { return silenceevents_; }
      set {
        silenceevents_ = value;
      }
    }

    /// <summary>Field number for the "loadsceneinsession" field.</summary>
    public const int LoadsceneinsessionFieldNumber = 15;
    private bool loadsceneinsession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Loadsceneinsession {
      get { return loadsceneinsession_; }
      set {
        loadsceneinsession_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CapabilitiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CapabilitiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Audio != other.Audio) return false;
      if (Emotions != other.Emotions) return false;
      if (Interruptions != other.Interruptions) return false;
      if (NarratedActions != other.NarratedActions) return false;
      if (Silence != other.Silence) return false;
      if (Text != other.Text) return false;
      if (Triggers != other.Triggers) return false;
      if (Continuation != other.Continuation) return false;
      if (TurnBasedStt != other.TurnBasedStt) return false;
      if (PhonemeInfo != other.PhonemeInfo) return false;
      if (Animations != other.Animations) return false;
      if (Gestures != other.Gestures) return false;
      if (Emotionstreaming != other.Emotionstreaming) return false;
      if (Silenceevents != other.Silenceevents) return false;
      if (Loadsceneinsession != other.Loadsceneinsession) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Audio != false) hash ^= Audio.GetHashCode();
      if (Emotions != false) hash ^= Emotions.GetHashCode();
      if (Interruptions != false) hash ^= Interruptions.GetHashCode();
      if (NarratedActions != false) hash ^= NarratedActions.GetHashCode();
      if (Silence != false) hash ^= Silence.GetHashCode();
      if (Text != false) hash ^= Text.GetHashCode();
      if (Triggers != false) hash ^= Triggers.GetHashCode();
      if (Continuation != false) hash ^= Continuation.GetHashCode();
      if (TurnBasedStt != false) hash ^= TurnBasedStt.GetHashCode();
      if (PhonemeInfo != false) hash ^= PhonemeInfo.GetHashCode();
      if (Animations != false) hash ^= Animations.GetHashCode();
      if (Gestures != false) hash ^= Gestures.GetHashCode();
      if (Emotionstreaming != false) hash ^= Emotionstreaming.GetHashCode();
      if (Silenceevents != false) hash ^= Silenceevents.GetHashCode();
      if (Loadsceneinsession != false) hash ^= Loadsceneinsession.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Audio != false) {
        output.WriteRawTag(8);
        output.WriteBool(Audio);
      }
      if (Emotions != false) {
        output.WriteRawTag(16);
        output.WriteBool(Emotions);
      }
      if (Interruptions != false) {
        output.WriteRawTag(24);
        output.WriteBool(Interruptions);
      }
      if (NarratedActions != false) {
        output.WriteRawTag(32);
        output.WriteBool(NarratedActions);
      }
      if (Silence != false) {
        output.WriteRawTag(40);
        output.WriteBool(Silence);
      }
      if (Text != false) {
        output.WriteRawTag(48);
        output.WriteBool(Text);
      }
      if (Triggers != false) {
        output.WriteRawTag(56);
        output.WriteBool(Triggers);
      }
      if (Continuation != false) {
        output.WriteRawTag(64);
        output.WriteBool(Continuation);
      }
      if (TurnBasedStt != false) {
        output.WriteRawTag(72);
        output.WriteBool(TurnBasedStt);
      }
      if (PhonemeInfo != false) {
        output.WriteRawTag(80);
        output.WriteBool(PhonemeInfo);
      }
      if (Animations != false) {
        output.WriteRawTag(88);
        output.WriteBool(Animations);
      }
      if (Gestures != false) {
        output.WriteRawTag(96);
        output.WriteBool(Gestures);
      }
      if (Emotionstreaming != false) {
        output.WriteRawTag(104);
        output.WriteBool(Emotionstreaming);
      }
      if (Silenceevents != false) {
        output.WriteRawTag(112);
        output.WriteBool(Silenceevents);
      }
      if (Loadsceneinsession != false) {
        output.WriteRawTag(120);
        output.WriteBool(Loadsceneinsession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Audio != false) {
        output.WriteRawTag(8);
        output.WriteBool(Audio);
      }
      if (Emotions != false) {
        output.WriteRawTag(16);
        output.WriteBool(Emotions);
      }
      if (Interruptions != false) {
        output.WriteRawTag(24);
        output.WriteBool(Interruptions);
      }
      if (NarratedActions != false) {
        output.WriteRawTag(32);
        output.WriteBool(NarratedActions);
      }
      if (Silence != false) {
        output.WriteRawTag(40);
        output.WriteBool(Silence);
      }
      if (Text != false) {
        output.WriteRawTag(48);
        output.WriteBool(Text);
      }
      if (Triggers != false) {
        output.WriteRawTag(56);
        output.WriteBool(Triggers);
      }
      if (Continuation != false) {
        output.WriteRawTag(64);
        output.WriteBool(Continuation);
      }
      if (TurnBasedStt != false) {
        output.WriteRawTag(72);
        output.WriteBool(TurnBasedStt);
      }
      if (PhonemeInfo != false) {
        output.WriteRawTag(80);
        output.WriteBool(PhonemeInfo);
      }
      if (Animations != false) {
        output.WriteRawTag(88);
        output.WriteBool(Animations);
      }
      if (Gestures != false) {
        output.WriteRawTag(96);
        output.WriteBool(Gestures);
      }
      if (Emotionstreaming != false) {
        output.WriteRawTag(104);
        output.WriteBool(Emotionstreaming);
      }
      if (Silenceevents != false) {
        output.WriteRawTag(112);
        output.WriteBool(Silenceevents);
      }
      if (Loadsceneinsession != false) {
        output.WriteRawTag(120);
        output.WriteBool(Loadsceneinsession);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Audio != false) {
        size += 1 + 1;
      }
      if (Emotions != false) {
        size += 1 + 1;
      }
      if (Interruptions != false) {
        size += 1 + 1;
      }
      if (NarratedActions != false) {
        size += 1 + 1;
      }
      if (Silence != false) {
        size += 1 + 1;
      }
      if (Text != false) {
        size += 1 + 1;
      }
      if (Triggers != false) {
        size += 1 + 1;
      }
      if (Continuation != false) {
        size += 1 + 1;
      }
      if (TurnBasedStt != false) {
        size += 1 + 1;
      }
      if (PhonemeInfo != false) {
        size += 1 + 1;
      }
      if (Animations != false) {
        size += 1 + 1;
      }
      if (Gestures != false) {
        size += 1 + 1;
      }
      if (Emotionstreaming != false) {
        size += 1 + 1;
      }
      if (Silenceevents != false) {
        size += 1 + 1;
      }
      if (Loadsceneinsession != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CapabilitiesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Audio != false) {
        Audio = other.Audio;
      }
      if (other.Emotions != false) {
        Emotions = other.Emotions;
      }
      if (other.Interruptions != false) {
        Interruptions = other.Interruptions;
      }
      if (other.NarratedActions != false) {
        NarratedActions = other.NarratedActions;
      }
      if (other.Silence != false) {
        Silence = other.Silence;
      }
      if (other.Text != false) {
        Text = other.Text;
      }
      if (other.Triggers != false) {
        Triggers = other.Triggers;
      }
      if (other.Continuation != false) {
        Continuation = other.Continuation;
      }
      if (other.TurnBasedStt != false) {
        TurnBasedStt = other.TurnBasedStt;
      }
      if (other.PhonemeInfo != false) {
        PhonemeInfo = other.PhonemeInfo;
      }
      if (other.Animations != false) {
        Animations = other.Animations;
      }
      if (other.Gestures != false) {
        Gestures = other.Gestures;
      }
      if (other.Emotionstreaming != false) {
        Emotionstreaming = other.Emotionstreaming;
      }
      if (other.Silenceevents != false) {
        Silenceevents = other.Silenceevents;
      }
      if (other.Loadsceneinsession != false) {
        Loadsceneinsession = other.Loadsceneinsession;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Audio = input.ReadBool();
            break;
          }
          case 16: {
            Emotions = input.ReadBool();
            break;
          }
          case 24: {
            Interruptions = input.ReadBool();
            break;
          }
          case 32: {
            NarratedActions = input.ReadBool();
            break;
          }
          case 40: {
            Silence = input.ReadBool();
            break;
          }
          case 48: {
            Text = input.ReadBool();
            break;
          }
          case 56: {
            Triggers = input.ReadBool();
            break;
          }
          case 64: {
            Continuation = input.ReadBool();
            break;
          }
          case 72: {
            TurnBasedStt = input.ReadBool();
            break;
          }
          case 80: {
            PhonemeInfo = input.ReadBool();
            break;
          }
          case 88: {
            Animations = input.ReadBool();
            break;
          }
          case 96: {
            Gestures = input.ReadBool();
            break;
          }
          case 104: {
            Emotionstreaming = input.ReadBool();
            break;
          }
          case 112: {
            Silenceevents = input.ReadBool();
            break;
          }
          case 120: {
            Loadsceneinsession = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Audio = input.ReadBool();
            break;
          }
          case 16: {
            Emotions = input.ReadBool();
            break;
          }
          case 24: {
            Interruptions = input.ReadBool();
            break;
          }
          case 32: {
            NarratedActions = input.ReadBool();
            break;
          }
          case 40: {
            Silence = input.ReadBool();
            break;
          }
          case 48: {
            Text = input.ReadBool();
            break;
          }
          case 56: {
            Triggers = input.ReadBool();
            break;
          }
          case 64: {
            Continuation = input.ReadBool();
            break;
          }
          case 72: {
            TurnBasedStt = input.ReadBool();
            break;
          }
          case 80: {
            PhonemeInfo = input.ReadBool();
            break;
          }
          case 88: {
            Animations = input.ReadBool();
            break;
          }
          case 96: {
            Gestures = input.ReadBool();
            break;
          }
          case 104: {
            Emotionstreaming = input.ReadBool();
            break;
          }
          case 112: {
            Silenceevents = input.ReadBool();
            break;
          }
          case 120: {
            Loadsceneinsession = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InworldCharacterData : pb::IMessage<InworldCharacterData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InworldCharacterData> _parser = new pb::MessageParser<InworldCharacterData>(() => new InworldCharacterData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InworldCharacterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InworldCharacterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InworldCharacterData(InworldCharacterData other) : this() {
      agentId_ = other.agentId_;
      brainName_ = other.brainName_;
      givenName_ = other.givenName_;
      characterAssets_ = other.characterAssets_ != null ? other.characterAssets_.Clone() : null;
      thumbnail_ = other.thumbnail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InworldCharacterData Clone() {
      return new InworldCharacterData(this);
    }

    /// <summary>Field number for the "agentId" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private string agentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentId {
      get { return agentId_; }
      set {
        agentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "brainName" field.</summary>
    public const int BrainNameFieldNumber = 2;
    private string brainName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrainName {
      get { return brainName_; }
      set {
        brainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "givenName" field.</summary>
    public const int GivenNameFieldNumber = 3;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characterAssets" field.</summary>
    public const int CharacterAssetsFieldNumber = 4;
    private global::Inworld.NDK.CharacterAssets characterAssets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Inworld.NDK.CharacterAssets CharacterAssets {
      get { return characterAssets_; }
      set {
        characterAssets_ = value;
      }
    }

    /// <summary>Field number for the "thumbnail" field.</summary>
    public const int ThumbnailFieldNumber = 5;
    private pb::ByteString thumbnail_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Thumbnail {
      get { return thumbnail_; }
      set {
        thumbnail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InworldCharacterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InworldCharacterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AgentId != other.AgentId) return false;
      if (BrainName != other.BrainName) return false;
      if (GivenName != other.GivenName) return false;
      if (!object.Equals(CharacterAssets, other.CharacterAssets)) return false;
      if (Thumbnail != other.Thumbnail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AgentId.Length != 0) hash ^= AgentId.GetHashCode();
      if (BrainName.Length != 0) hash ^= BrainName.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (characterAssets_ != null) hash ^= CharacterAssets.GetHashCode();
      if (Thumbnail.Length != 0) hash ^= Thumbnail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AgentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AgentId);
      }
      if (BrainName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BrainName);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GivenName);
      }
      if (characterAssets_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CharacterAssets);
      }
      if (Thumbnail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Thumbnail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AgentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AgentId);
      }
      if (BrainName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BrainName);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GivenName);
      }
      if (characterAssets_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CharacterAssets);
      }
      if (Thumbnail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Thumbnail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AgentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentId);
      }
      if (BrainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrainName);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (characterAssets_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CharacterAssets);
      }
      if (Thumbnail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Thumbnail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InworldCharacterData other) {
      if (other == null) {
        return;
      }
      if (other.AgentId.Length != 0) {
        AgentId = other.AgentId;
      }
      if (other.BrainName.Length != 0) {
        BrainName = other.BrainName;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.characterAssets_ != null) {
        if (characterAssets_ == null) {
          CharacterAssets = new global::Inworld.NDK.CharacterAssets();
        }
        CharacterAssets.MergeFrom(other.CharacterAssets);
      }
      if (other.Thumbnail.Length != 0) {
        Thumbnail = other.Thumbnail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AgentId = input.ReadString();
            break;
          }
          case 18: {
            BrainName = input.ReadString();
            break;
          }
          case 26: {
            GivenName = input.ReadString();
            break;
          }
          case 34: {
            if (characterAssets_ == null) {
              CharacterAssets = new global::Inworld.NDK.CharacterAssets();
            }
            input.ReadMessage(CharacterAssets);
            break;
          }
          case 42: {
            Thumbnail = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AgentId = input.ReadString();
            break;
          }
          case 18: {
            BrainName = input.ReadString();
            break;
          }
          case 26: {
            GivenName = input.ReadString();
            break;
          }
          case 34: {
            if (characterAssets_ == null) {
              CharacterAssets = new global::Inworld.NDK.CharacterAssets();
            }
            input.ReadMessage(CharacterAssets);
            break;
          }
          case 42: {
            Thumbnail = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CharacterAssets : pb::IMessage<CharacterAssets>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterAssets> _parser = new pb::MessageParser<CharacterAssets>(() => new CharacterAssets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CharacterAssets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterAssets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterAssets(CharacterAssets other) : this() {
      rpmModelUri_ = other.rpmModelUri_;
      rpmImageUriPortrait_ = other.rpmImageUriPortrait_;
      rpmImageUriPosture_ = other.rpmImageUriPosture_;
      avatarImg_ = other.avatarImg_;
      avatarImgOriginal_ = other.avatarImgOriginal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterAssets Clone() {
      return new CharacterAssets(this);
    }

    /// <summary>Field number for the "rpmModelUri" field.</summary>
    public const int RpmModelUriFieldNumber = 1;
    private string rpmModelUri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RpmModelUri {
      get { return rpmModelUri_; }
      set {
        rpmModelUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rpmImageUriPortrait" field.</summary>
    public const int RpmImageUriPortraitFieldNumber = 2;
    private string rpmImageUriPortrait_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RpmImageUriPortrait {
      get { return rpmImageUriPortrait_; }
      set {
        rpmImageUriPortrait_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rpmImageUriPosture" field.</summary>
    public const int RpmImageUriPostureFieldNumber = 3;
    private string rpmImageUriPosture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RpmImageUriPosture {
      get { return rpmImageUriPosture_; }
      set {
        rpmImageUriPosture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarImg" field.</summary>
    public const int AvatarImgFieldNumber = 4;
    private string avatarImg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvatarImg {
      get { return avatarImg_; }
      set {
        avatarImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatarImgOriginal" field.</summary>
    public const int AvatarImgOriginalFieldNumber = 5;
    private string avatarImgOriginal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvatarImgOriginal {
      get { return avatarImgOriginal_; }
      set {
        avatarImgOriginal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CharacterAssets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CharacterAssets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RpmModelUri != other.RpmModelUri) return false;
      if (RpmImageUriPortrait != other.RpmImageUriPortrait) return false;
      if (RpmImageUriPosture != other.RpmImageUriPosture) return false;
      if (AvatarImg != other.AvatarImg) return false;
      if (AvatarImgOriginal != other.AvatarImgOriginal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RpmModelUri.Length != 0) hash ^= RpmModelUri.GetHashCode();
      if (RpmImageUriPortrait.Length != 0) hash ^= RpmImageUriPortrait.GetHashCode();
      if (RpmImageUriPosture.Length != 0) hash ^= RpmImageUriPosture.GetHashCode();
      if (AvatarImg.Length != 0) hash ^= AvatarImg.GetHashCode();
      if (AvatarImgOriginal.Length != 0) hash ^= AvatarImgOriginal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RpmModelUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RpmModelUri);
      }
      if (RpmImageUriPortrait.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RpmImageUriPortrait);
      }
      if (RpmImageUriPosture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpmImageUriPosture);
      }
      if (AvatarImg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AvatarImg);
      }
      if (AvatarImgOriginal.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AvatarImgOriginal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RpmModelUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RpmModelUri);
      }
      if (RpmImageUriPortrait.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RpmImageUriPortrait);
      }
      if (RpmImageUriPosture.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RpmImageUriPosture);
      }
      if (AvatarImg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AvatarImg);
      }
      if (AvatarImgOriginal.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AvatarImgOriginal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RpmModelUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpmModelUri);
      }
      if (RpmImageUriPortrait.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpmImageUriPortrait);
      }
      if (RpmImageUriPosture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpmImageUriPosture);
      }
      if (AvatarImg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarImg);
      }
      if (AvatarImgOriginal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarImgOriginal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CharacterAssets other) {
      if (other == null) {
        return;
      }
      if (other.RpmModelUri.Length != 0) {
        RpmModelUri = other.RpmModelUri;
      }
      if (other.RpmImageUriPortrait.Length != 0) {
        RpmImageUriPortrait = other.RpmImageUriPortrait;
      }
      if (other.RpmImageUriPosture.Length != 0) {
        RpmImageUriPosture = other.RpmImageUriPosture;
      }
      if (other.AvatarImg.Length != 0) {
        AvatarImg = other.AvatarImg;
      }
      if (other.AvatarImgOriginal.Length != 0) {
        AvatarImgOriginal = other.AvatarImgOriginal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RpmModelUri = input.ReadString();
            break;
          }
          case 18: {
            RpmImageUriPortrait = input.ReadString();
            break;
          }
          case 26: {
            RpmImageUriPosture = input.ReadString();
            break;
          }
          case 34: {
            AvatarImg = input.ReadString();
            break;
          }
          case 42: {
            AvatarImgOriginal = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RpmModelUri = input.ReadString();
            break;
          }
          case 18: {
            RpmImageUriPortrait = input.ReadString();
            break;
          }
          case 26: {
            RpmImageUriPosture = input.ReadString();
            break;
          }
          case 34: {
            AvatarImg = input.ReadString();
            break;
          }
          case 42: {
            AvatarImgOriginal = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientOptions : pb::IMessage<ClientOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientOptions> _parser = new pb::MessageParser<ClientOptions>(() => new ClientOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientOptions(ClientOptions other) : this() {
      serverUrl_ = other.serverUrl_;
      sceneName_ = other.sceneName_;
      apiKey_ = other.apiKey_;
      apiSecret_ = other.apiSecret_;
      playerName_ = other.playerName_;
      token_ = other.token_;
      sessionId_ = other.sessionId_;
      userId_ = other.userId_;
      capabilities_ = other.capabilities_ != null ? other.capabilities_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientOptions Clone() {
      return new ClientOptions(this);
    }

    /// <summary>Field number for the "server_url" field.</summary>
    public const int ServerUrlFieldNumber = 2;
    private string serverUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerUrl {
      get { return serverUrl_; }
      set {
        serverUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scene_name" field.</summary>
    public const int SceneNameFieldNumber = 3;
    private string sceneName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SceneName {
      get { return sceneName_; }
      set {
        sceneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "api_key" field.</summary>
    public const int ApiKeyFieldNumber = 4;
    private string apiKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiKey {
      get { return apiKey_; }
      set {
        apiKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "api_secret" field.</summary>
    public const int ApiSecretFieldNumber = 5;
    private string apiSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiSecret {
      get { return apiSecret_; }
      set {
        apiSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 6;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 7;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 8;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 9;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "capabilities" field.</summary>
    public const int CapabilitiesFieldNumber = 10;
    private global::Inworld.NDK.CapabilitiesRequest capabilities_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Inworld.NDK.CapabilitiesRequest Capabilities {
      get { return capabilities_; }
      set {
        capabilities_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerUrl != other.ServerUrl) return false;
      if (SceneName != other.SceneName) return false;
      if (ApiKey != other.ApiKey) return false;
      if (ApiSecret != other.ApiSecret) return false;
      if (PlayerName != other.PlayerName) return false;
      if (Token != other.Token) return false;
      if (SessionId != other.SessionId) return false;
      if (UserId != other.UserId) return false;
      if (!object.Equals(Capabilities, other.Capabilities)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerUrl.Length != 0) hash ^= ServerUrl.GetHashCode();
      if (SceneName.Length != 0) hash ^= SceneName.GetHashCode();
      if (ApiKey.Length != 0) hash ^= ApiKey.GetHashCode();
      if (ApiSecret.Length != 0) hash ^= ApiSecret.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (capabilities_ != null) hash ^= Capabilities.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServerUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerUrl);
      }
      if (SceneName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SceneName);
      }
      if (ApiKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ApiKey);
      }
      if (ApiSecret.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ApiSecret);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlayerName);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Token);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SessionId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UserId);
      }
      if (capabilities_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Capabilities);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServerUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerUrl);
      }
      if (SceneName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SceneName);
      }
      if (ApiKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ApiKey);
      }
      if (ApiSecret.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ApiSecret);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PlayerName);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Token);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SessionId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UserId);
      }
      if (capabilities_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Capabilities);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerUrl);
      }
      if (SceneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneName);
      }
      if (ApiKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiKey);
      }
      if (ApiSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiSecret);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (capabilities_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Capabilities);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientOptions other) {
      if (other == null) {
        return;
      }
      if (other.ServerUrl.Length != 0) {
        ServerUrl = other.ServerUrl;
      }
      if (other.SceneName.Length != 0) {
        SceneName = other.SceneName;
      }
      if (other.ApiKey.Length != 0) {
        ApiKey = other.ApiKey;
      }
      if (other.ApiSecret.Length != 0) {
        ApiSecret = other.ApiSecret;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.capabilities_ != null) {
        if (capabilities_ == null) {
          Capabilities = new global::Inworld.NDK.CapabilitiesRequest();
        }
        Capabilities.MergeFrom(other.Capabilities);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            ServerUrl = input.ReadString();
            break;
          }
          case 26: {
            SceneName = input.ReadString();
            break;
          }
          case 34: {
            ApiKey = input.ReadString();
            break;
          }
          case 42: {
            ApiSecret = input.ReadString();
            break;
          }
          case 50: {
            PlayerName = input.ReadString();
            break;
          }
          case 58: {
            Token = input.ReadString();
            break;
          }
          case 66: {
            SessionId = input.ReadString();
            break;
          }
          case 74: {
            UserId = input.ReadString();
            break;
          }
          case 82: {
            if (capabilities_ == null) {
              Capabilities = new global::Inworld.NDK.CapabilitiesRequest();
            }
            input.ReadMessage(Capabilities);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            ServerUrl = input.ReadString();
            break;
          }
          case 26: {
            SceneName = input.ReadString();
            break;
          }
          case 34: {
            ApiKey = input.ReadString();
            break;
          }
          case 42: {
            ApiSecret = input.ReadString();
            break;
          }
          case 50: {
            PlayerName = input.ReadString();
            break;
          }
          case 58: {
            Token = input.ReadString();
            break;
          }
          case 66: {
            SessionId = input.ReadString();
            break;
          }
          case 74: {
            UserId = input.ReadString();
            break;
          }
          case 82: {
            if (capabilities_ == null) {
              Capabilities = new global::Inworld.NDK.CapabilitiesRequest();
            }
            input.ReadMessage(Capabilities);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AgentInfo : pb::IMessage<AgentInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AgentInfo> _parser = new pb::MessageParser<AgentInfo>(() => new AgentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentInfo(AgentInfo other) : this() {
      brainName_ = other.brainName_;
      agentId_ = other.agentId_;
      givenName_ = other.givenName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentInfo Clone() {
      return new AgentInfo(this);
    }

    /// <summary>Field number for the "BrainName" field.</summary>
    public const int BrainNameFieldNumber = 1;
    private string brainName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BrainName {
      get { return brainName_; }
      set {
        brainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AgentId" field.</summary>
    public const int AgentIdFieldNumber = 2;
    private string agentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentId {
      get { return agentId_; }
      set {
        agentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GivenName" field.</summary>
    public const int GivenNameFieldNumber = 3;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrainName != other.BrainName) return false;
      if (AgentId != other.AgentId) return false;
      if (GivenName != other.GivenName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BrainName.Length != 0) hash ^= BrainName.GetHashCode();
      if (AgentId.Length != 0) hash ^= AgentId.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BrainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BrainName);
      }
      if (AgentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AgentId);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GivenName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BrainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BrainName);
      }
      if (AgentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AgentId);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GivenName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BrainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrainName);
      }
      if (AgentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AgentId);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgentInfo other) {
      if (other == null) {
        return;
      }
      if (other.BrainName.Length != 0) {
        BrainName = other.BrainName;
      }
      if (other.AgentId.Length != 0) {
        AgentId = other.AgentId;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BrainName = input.ReadString();
            break;
          }
          case 18: {
            AgentId = input.ReadString();
            break;
          }
          case 26: {
            GivenName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BrainName = input.ReadString();
            break;
          }
          case 18: {
            AgentId = input.ReadString();
            break;
          }
          case 26: {
            GivenName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SessionInfo : pb::IMessage<SessionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SessionInfo> _parser = new pb::MessageParser<SessionInfo>(() => new SessionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionInfo(SessionInfo other) : this() {
      sessionId_ = other.sessionId_;
      token_ = other.token_;
      expirationTime_ = other.expirationTime_;
      isValid_ = other.isValid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionInfo Clone() {
      return new SessionInfo(this);
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExpirationTime" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private long expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "IsValid" field.</summary>
    public const int IsValidFieldNumber = 4;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Token != other.Token) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (IsValid != other.IsValid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (ExpirationTime != 0L) hash ^= ExpirationTime.GetHashCode();
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (ExpirationTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpirationTime);
      }
      if (IsValid != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsValid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (ExpirationTime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpirationTime);
      }
      if (IsValid != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsValid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (ExpirationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTime);
      }
      if (IsValid != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionInfo other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.ExpirationTime != 0L) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 32: {
            IsValid = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 24: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 32: {
            IsValid = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AgentInfoArray : pb::IMessage<AgentInfoArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AgentInfoArray> _parser = new pb::MessageParser<AgentInfoArray>(() => new AgentInfoArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AgentInfoArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inworld.NDK.InworldNdkDataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentInfoArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentInfoArray(AgentInfoArray other) : this() {
      agentInfoList_ = other.agentInfoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AgentInfoArray Clone() {
      return new AgentInfoArray(this);
    }

    /// <summary>Field number for the "agent_info_list" field.</summary>
    public const int AgentInfoListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Inworld.NDK.AgentInfo> _repeated_agentInfoList_codec
        = pb::FieldCodec.ForMessage(10, global::Inworld.NDK.AgentInfo.Parser);
    private readonly pbc::RepeatedField<global::Inworld.NDK.AgentInfo> agentInfoList_ = new pbc::RepeatedField<global::Inworld.NDK.AgentInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Inworld.NDK.AgentInfo> AgentInfoList {
      get { return agentInfoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AgentInfoArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AgentInfoArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!agentInfoList_.Equals(other.agentInfoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= agentInfoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      agentInfoList_.WriteTo(output, _repeated_agentInfoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      agentInfoList_.WriteTo(ref output, _repeated_agentInfoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += agentInfoList_.CalculateSize(_repeated_agentInfoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AgentInfoArray other) {
      if (other == null) {
        return;
      }
      agentInfoList_.Add(other.agentInfoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            agentInfoList_.AddEntriesFrom(input, _repeated_agentInfoList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            agentInfoList_.AddEntriesFrom(ref input, _repeated_agentInfoList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
