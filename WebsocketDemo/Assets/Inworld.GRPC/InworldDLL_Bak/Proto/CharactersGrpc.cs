// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ai/inworld/studio/v1alpha/characters.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Ai.Inworld.Studio.V1Alpha {
  /// <summary>
  /// RPC service to manage characters (characters)
  /// </summary>
  public static partial class Characters
  {
    static readonly string __ServiceName = "ai.inworld.studio.v1alpha.Characters";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest> __Marshaller_ai_inworld_studio_v1alpha_DeployCharacterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest> __Marshaller_ai_inworld_studio_v1alpha_GetCharacterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.Character> __Marshaller_ai_inworld_studio_v1alpha_Character = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.Character.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest> __Marshaller_ai_inworld_studio_v1alpha_ListCharactersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse> __Marshaller_ai_inworld_studio_v1alpha_ListCharactersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest> __Marshaller_ai_inworld_studio_v1alpha_UpdateCharacterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest> __Marshaller_ai_inworld_studio_v1alpha_CreateCharacterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest> __Marshaller_ai_inworld_studio_v1alpha_DeleteCharacterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest> __Marshaller_ai_inworld_studio_v1alpha_ReplaceCharacterRpmModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest> __Marshaller_ai_inworld_studio_v1alpha_PreviewPromptTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse> __Marshaller_ai_inworld_studio_v1alpha_PreviewPromptTempalteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest> __Marshaller_ai_inworld_studio_v1alpha_CheckDeployInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse> __Marshaller_ai_inworld_studio_v1alpha_CheckDeployInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest> __Marshaller_ai_inworld_studio_v1alpha_GetCharacterAdvancedSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> __Marshaller_ai_inworld_studio_v1alpha_CharacterAdvancedSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest> __Marshaller_ai_inworld_studio_v1alpha_UpdateCharacterAdvancedSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest> __Marshaller_ai_inworld_studio_v1alpha_ShareCharacterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest> __Marshaller_ai_inworld_studio_v1alpha_ShareCharacterPortalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest> __Marshaller_ai_inworld_studio_v1alpha_UnshareCharacterPortalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest> __Marshaller_ai_inworld_studio_v1alpha_ListSharedCharactersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse> __Marshaller_ai_inworld_studio_v1alpha_ListSharedCharactersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest> __Marshaller_ai_inworld_studio_v1alpha_GetCharacterShareInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo> __Marshaller_ai_inworld_studio_v1alpha_CharacterShareInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeployCharacter = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeployCharacter",
        __Marshaller_ai_inworld_studio_v1alpha_DeployCharacterRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character> __Method_GetCharacter = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCharacter",
        __Marshaller_ai_inworld_studio_v1alpha_GetCharacterRequest,
        __Marshaller_ai_inworld_studio_v1alpha_Character);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest, global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse> __Method_ListCharacters = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest, global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCharacters",
        __Marshaller_ai_inworld_studio_v1alpha_ListCharactersRequest,
        __Marshaller_ai_inworld_studio_v1alpha_ListCharactersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character> __Method_UpdateCharacter = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCharacter",
        __Marshaller_ai_inworld_studio_v1alpha_UpdateCharacterRequest,
        __Marshaller_ai_inworld_studio_v1alpha_Character);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character> __Method_CreateCharacter = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCharacter",
        __Marshaller_ai_inworld_studio_v1alpha_CreateCharacterRequest,
        __Marshaller_ai_inworld_studio_v1alpha_Character);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCharacter = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCharacter",
        __Marshaller_ai_inworld_studio_v1alpha_DeleteCharacterRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest, global::Ai.Inworld.Studio.V1Alpha.Character> __Method_ReplaceCharacterRpmModel = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReplaceCharacterRpmModel",
        __Marshaller_ai_inworld_studio_v1alpha_ReplaceCharacterRpmModelRequest,
        __Marshaller_ai_inworld_studio_v1alpha_Character);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest, global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse> __Method_PreviewPromptTemplate = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest, global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PreviewPromptTemplate",
        __Marshaller_ai_inworld_studio_v1alpha_PreviewPromptTemplateRequest,
        __Marshaller_ai_inworld_studio_v1alpha_PreviewPromptTempalteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest, global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse> __Method_CheckDeployInfo = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest, global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckDeployInfo",
        __Marshaller_ai_inworld_studio_v1alpha_CheckDeployInfoRequest,
        __Marshaller_ai_inworld_studio_v1alpha_CheckDeployInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> __Method_GetCharacterAdvancedSettings = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCharacterAdvancedSettings",
        __Marshaller_ai_inworld_studio_v1alpha_GetCharacterAdvancedSettingsRequest,
        __Marshaller_ai_inworld_studio_v1alpha_CharacterAdvancedSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> __Method_UpdateCharacterAdvancedSettings = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCharacterAdvancedSettings",
        __Marshaller_ai_inworld_studio_v1alpha_UpdateCharacterAdvancedSettingsRequest,
        __Marshaller_ai_inworld_studio_v1alpha_CharacterAdvancedSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ShareCharacter = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ShareCharacter",
        __Marshaller_ai_inworld_studio_v1alpha_ShareCharacterRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ShareCharacterPortal = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ShareCharacterPortal",
        __Marshaller_ai_inworld_studio_v1alpha_ShareCharacterPortalRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UnshareCharacterPortal = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnshareCharacterPortal",
        __Marshaller_ai_inworld_studio_v1alpha_UnshareCharacterPortalRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest, global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse> __Method_ListSharedCharacters = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest, global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSharedCharacters",
        __Marshaller_ai_inworld_studio_v1alpha_ListSharedCharactersRequest,
        __Marshaller_ai_inworld_studio_v1alpha_ListSharedCharactersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo> __Method_GetCharacterShareInfo = new grpc::Method<global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCharacterShareInfo",
        __Marshaller_ai_inworld_studio_v1alpha_GetCharacterShareInfoRequest,
        __Marshaller_ai_inworld_studio_v1alpha_CharacterShareInfo);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Ai.Inworld.Studio.V1Alpha.CharactersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Characters</summary>
    [grpc::BindServiceMethod(typeof(Characters), "BindService")]
    public abstract partial class CharactersBase
    {
      /// <summary>
      /// RPC to deploy the brain for the character.
      /// Available list for now:
      ///   defaultCharacterDescription.givenName
      ///   defaultCharacterDescription.description
      ///   defaultCharacterDescription.motivation
      ///   defaultCharacterDescription.characterRole
      ///   defaultCharacterDescription.exampleDialog
      ///   defaultCharacterDescription.nicknames.&lt;INDEX> (e.g. defaultCharacterDescription.nicknames.0)
      ///   description.hobbyOrInterests.&lt;INDEX>
      ///   description.personalityAdjectives.&lt;INDEX>
      ///   commonKnowledges&lt;INDEX>.description - description from external common knowledge common_knowledges.0.description
      ///   commonKnowledges&lt;INDEX>.memoryRecords&lt;INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
      ///   commonKnowledges.memoryRecords&lt;INDEX> - memory record from local list of facts
      ///   behavioralContexts.&lt;INDEX>.name
      ///   behavioralContexts.&lt;INDEX>.motivation
      ///   behavioralContexts.&lt;INDEX1>.triggers.&lt;INDEX2>
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.tellInstructed.speechInstruction
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.sendCustomEvent.customEvent
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeployCharacter(global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Character's CRUD.
      /// RPC to get one character by name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.Character> GetCharacter(global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to get list of characters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse> ListCharacters(global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to update a character.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.Character> UpdateCharacter(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.Character> CreateCharacter(global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to delete a character.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCharacter(global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to update RPM model for the character.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.Character> ReplaceCharacterRpmModel(global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns some meaningful preview of the prompt template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse> PreviewPromptTemplate(global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns deployment information about character. For now
      /// only is fresh or not
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse> CheckDeployInfo(global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> GetCharacterAdvancedSettings(global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to update a character advanced settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> UpdateCharacterAdvancedSettings(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to share the character with listed of external ids
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ShareCharacter(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to share the character with portal users
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ShareCharacterPortal(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to un share the character with portal users
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UnshareCharacterPortal(global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns characters which were shared with the current user
      /// (-- api-linter: core::0136::http-uri-suffix=disabled --)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse> ListSharedCharacters(global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// RPC to get actual sharing info on the character.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo> GetCharacterShareInfo(global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Characters</summary>
    public partial class CharactersClient : grpc::ClientBase<CharactersClient>
    {
      /// <summary>Creates a new client for Characters</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CharactersClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Characters that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CharactersClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CharactersClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CharactersClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// RPC to deploy the brain for the character.
      /// Available list for now:
      ///   defaultCharacterDescription.givenName
      ///   defaultCharacterDescription.description
      ///   defaultCharacterDescription.motivation
      ///   defaultCharacterDescription.characterRole
      ///   defaultCharacterDescription.exampleDialog
      ///   defaultCharacterDescription.nicknames.&lt;INDEX> (e.g. defaultCharacterDescription.nicknames.0)
      ///   description.hobbyOrInterests.&lt;INDEX>
      ///   description.personalityAdjectives.&lt;INDEX>
      ///   commonKnowledges&lt;INDEX>.description - description from external common knowledge common_knowledges.0.description
      ///   commonKnowledges&lt;INDEX>.memoryRecords&lt;INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
      ///   commonKnowledges.memoryRecords&lt;INDEX> - memory record from local list of facts
      ///   behavioralContexts.&lt;INDEX>.name
      ///   behavioralContexts.&lt;INDEX>.motivation
      ///   behavioralContexts.&lt;INDEX1>.triggers.&lt;INDEX2>
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.tellInstructed.speechInstruction
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.sendCustomEvent.customEvent
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeployCharacter(global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to deploy the brain for the character.
      /// Available list for now:
      ///   defaultCharacterDescription.givenName
      ///   defaultCharacterDescription.description
      ///   defaultCharacterDescription.motivation
      ///   defaultCharacterDescription.characterRole
      ///   defaultCharacterDescription.exampleDialog
      ///   defaultCharacterDescription.nicknames.&lt;INDEX> (e.g. defaultCharacterDescription.nicknames.0)
      ///   description.hobbyOrInterests.&lt;INDEX>
      ///   description.personalityAdjectives.&lt;INDEX>
      ///   commonKnowledges&lt;INDEX>.description - description from external common knowledge common_knowledges.0.description
      ///   commonKnowledges&lt;INDEX>.memoryRecords&lt;INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
      ///   commonKnowledges.memoryRecords&lt;INDEX> - memory record from local list of facts
      ///   behavioralContexts.&lt;INDEX>.name
      ///   behavioralContexts.&lt;INDEX>.motivation
      ///   behavioralContexts.&lt;INDEX1>.triggers.&lt;INDEX2>
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.tellInstructed.speechInstruction
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.sendCustomEvent.customEvent
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeployCharacter(global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeployCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to deploy the brain for the character.
      /// Available list for now:
      ///   defaultCharacterDescription.givenName
      ///   defaultCharacterDescription.description
      ///   defaultCharacterDescription.motivation
      ///   defaultCharacterDescription.characterRole
      ///   defaultCharacterDescription.exampleDialog
      ///   defaultCharacterDescription.nicknames.&lt;INDEX> (e.g. defaultCharacterDescription.nicknames.0)
      ///   description.hobbyOrInterests.&lt;INDEX>
      ///   description.personalityAdjectives.&lt;INDEX>
      ///   commonKnowledges&lt;INDEX>.description - description from external common knowledge common_knowledges.0.description
      ///   commonKnowledges&lt;INDEX>.memoryRecords&lt;INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
      ///   commonKnowledges.memoryRecords&lt;INDEX> - memory record from local list of facts
      ///   behavioralContexts.&lt;INDEX>.name
      ///   behavioralContexts.&lt;INDEX>.motivation
      ///   behavioralContexts.&lt;INDEX1>.triggers.&lt;INDEX2>
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.tellInstructed.speechInstruction
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.sendCustomEvent.customEvent
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeployCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to deploy the brain for the character.
      /// Available list for now:
      ///   defaultCharacterDescription.givenName
      ///   defaultCharacterDescription.description
      ///   defaultCharacterDescription.motivation
      ///   defaultCharacterDescription.characterRole
      ///   defaultCharacterDescription.exampleDialog
      ///   defaultCharacterDescription.nicknames.&lt;INDEX> (e.g. defaultCharacterDescription.nicknames.0)
      ///   description.hobbyOrInterests.&lt;INDEX>
      ///   description.personalityAdjectives.&lt;INDEX>
      ///   commonKnowledges&lt;INDEX>.description - description from external common knowledge common_knowledges.0.description
      ///   commonKnowledges&lt;INDEX>.memoryRecords&lt;INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
      ///   commonKnowledges.memoryRecords&lt;INDEX> - memory record from local list of facts
      ///   behavioralContexts.&lt;INDEX>.name
      ///   behavioralContexts.&lt;INDEX>.motivation
      ///   behavioralContexts.&lt;INDEX1>.triggers.&lt;INDEX2>
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.tellInstructed.speechInstruction
      ///   behavioralContexts.&lt;INDEX1>.behavioralContextInteraction.&lt;INDEX2>.actions.&lt;INDEX3>.sendCustomEvent.customEvent
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeployCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeployCharacter, null, options, request);
      }
      /// <summary>
      /// Character's CRUD.
      /// RPC to get one character by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character GetCharacter(global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Character's CRUD.
      /// RPC to get one character by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character GetCharacter(global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCharacter, null, options, request);
      }
      /// <summary>
      /// Character's CRUD.
      /// RPC to get one character by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> GetCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Character's CRUD.
      /// RPC to get one character by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> GetCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to get list of characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse ListCharacters(global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCharacters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to get list of characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse ListCharacters(global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCharacters, null, options, request);
      }
      /// <summary>
      /// RPC to get list of characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse> ListCharactersAsync(global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCharactersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to get list of characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse> ListCharactersAsync(global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCharacters, null, options, request);
      }
      /// <summary>
      /// RPC to update a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character UpdateCharacter(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to update a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character UpdateCharacter(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to update a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> UpdateCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to update a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> UpdateCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character CreateCharacter(global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character CreateCharacter(global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> CreateCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> CreateCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to delete a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCharacter(global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to delete a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCharacter(global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to delete a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to delete a character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to update RPM model for the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character ReplaceCharacterRpmModel(global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReplaceCharacterRpmModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to update RPM model for the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.Character ReplaceCharacterRpmModel(global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReplaceCharacterRpmModel, null, options, request);
      }
      /// <summary>
      /// RPC to update RPM model for the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> ReplaceCharacterRpmModelAsync(global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReplaceCharacterRpmModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to update RPM model for the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.Character> ReplaceCharacterRpmModelAsync(global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReplaceCharacterRpmModel, null, options, request);
      }
      /// <summary>
      /// Returns some meaningful preview of the prompt template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse PreviewPromptTemplate(global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PreviewPromptTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns some meaningful preview of the prompt template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse PreviewPromptTemplate(global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PreviewPromptTemplate, null, options, request);
      }
      /// <summary>
      /// Returns some meaningful preview of the prompt template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse> PreviewPromptTemplateAsync(global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PreviewPromptTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns some meaningful preview of the prompt template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse> PreviewPromptTemplateAsync(global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PreviewPromptTemplate, null, options, request);
      }
      /// <summary>
      /// Returns deployment information about character. For now
      /// only is fresh or not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse CheckDeployInfo(global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckDeployInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns deployment information about character. For now
      /// only is fresh or not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse CheckDeployInfo(global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckDeployInfo, null, options, request);
      }
      /// <summary>
      /// Returns deployment information about character. For now
      /// only is fresh or not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse> CheckDeployInfoAsync(global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckDeployInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns deployment information about character. For now
      /// only is fresh or not
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse> CheckDeployInfoAsync(global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckDeployInfo, null, options, request);
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings GetCharacterAdvancedSettings(global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCharacterAdvancedSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings GetCharacterAdvancedSettings(global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCharacterAdvancedSettings, null, options, request);
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> GetCharacterAdvancedSettingsAsync(global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCharacterAdvancedSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to create character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> GetCharacterAdvancedSettingsAsync(global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCharacterAdvancedSettings, null, options, request);
      }
      /// <summary>
      /// RPC to update a character advanced settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings UpdateCharacterAdvancedSettings(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCharacterAdvancedSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to update a character advanced settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings UpdateCharacterAdvancedSettings(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCharacterAdvancedSettings, null, options, request);
      }
      /// <summary>
      /// RPC to update a character advanced settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> UpdateCharacterAdvancedSettingsAsync(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCharacterAdvancedSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to update a character advanced settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings> UpdateCharacterAdvancedSettingsAsync(global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCharacterAdvancedSettings, null, options, request);
      }
      /// <summary>
      /// RPC to share the character with listed of external ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ShareCharacter(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShareCharacter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to share the character with listed of external ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ShareCharacter(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ShareCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to share the character with listed of external ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ShareCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShareCharacterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to share the character with listed of external ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ShareCharacterAsync(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ShareCharacter, null, options, request);
      }
      /// <summary>
      /// RPC to share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ShareCharacterPortal(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShareCharacterPortal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ShareCharacterPortal(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ShareCharacterPortal, null, options, request);
      }
      /// <summary>
      /// RPC to share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ShareCharacterPortalAsync(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShareCharacterPortalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ShareCharacterPortalAsync(global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ShareCharacterPortal, null, options, request);
      }
      /// <summary>
      /// RPC to un share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UnshareCharacterPortal(global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnshareCharacterPortal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to un share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UnshareCharacterPortal(global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnshareCharacterPortal, null, options, request);
      }
      /// <summary>
      /// RPC to un share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UnshareCharacterPortalAsync(global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnshareCharacterPortalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to un share the character with portal users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UnshareCharacterPortalAsync(global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnshareCharacterPortal, null, options, request);
      }
      /// <summary>
      /// Returns characters which were shared with the current user
      /// (-- api-linter: core::0136::http-uri-suffix=disabled --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse ListSharedCharacters(global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSharedCharacters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns characters which were shared with the current user
      /// (-- api-linter: core::0136::http-uri-suffix=disabled --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse ListSharedCharacters(global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSharedCharacters, null, options, request);
      }
      /// <summary>
      /// Returns characters which were shared with the current user
      /// (-- api-linter: core::0136::http-uri-suffix=disabled --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse> ListSharedCharactersAsync(global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSharedCharactersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns characters which were shared with the current user
      /// (-- api-linter: core::0136::http-uri-suffix=disabled --)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse> ListSharedCharactersAsync(global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSharedCharacters, null, options, request);
      }
      /// <summary>
      /// RPC to get actual sharing info on the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo GetCharacterShareInfo(global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCharacterShareInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to get actual sharing info on the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo GetCharacterShareInfo(global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCharacterShareInfo, null, options, request);
      }
      /// <summary>
      /// RPC to get actual sharing info on the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo> GetCharacterShareInfoAsync(global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCharacterShareInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// RPC to get actual sharing info on the character.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo> GetCharacterShareInfoAsync(global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCharacterShareInfo, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CharactersClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CharactersClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CharactersBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_DeployCharacter, serviceImpl.DeployCharacter)
          .AddMethod(__Method_GetCharacter, serviceImpl.GetCharacter)
          .AddMethod(__Method_ListCharacters, serviceImpl.ListCharacters)
          .AddMethod(__Method_UpdateCharacter, serviceImpl.UpdateCharacter)
          .AddMethod(__Method_CreateCharacter, serviceImpl.CreateCharacter)
          .AddMethod(__Method_DeleteCharacter, serviceImpl.DeleteCharacter)
          .AddMethod(__Method_ReplaceCharacterRpmModel, serviceImpl.ReplaceCharacterRpmModel)
          .AddMethod(__Method_PreviewPromptTemplate, serviceImpl.PreviewPromptTemplate)
          .AddMethod(__Method_CheckDeployInfo, serviceImpl.CheckDeployInfo)
          .AddMethod(__Method_GetCharacterAdvancedSettings, serviceImpl.GetCharacterAdvancedSettings)
          .AddMethod(__Method_UpdateCharacterAdvancedSettings, serviceImpl.UpdateCharacterAdvancedSettings)
          .AddMethod(__Method_ShareCharacter, serviceImpl.ShareCharacter)
          .AddMethod(__Method_ShareCharacterPortal, serviceImpl.ShareCharacterPortal)
          .AddMethod(__Method_UnshareCharacterPortal, serviceImpl.UnshareCharacterPortal)
          .AddMethod(__Method_ListSharedCharacters, serviceImpl.ListSharedCharacters)
          .AddMethod(__Method_GetCharacterShareInfo, serviceImpl.GetCharacterShareInfo).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CharactersBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_DeployCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.DeployCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeployCharacter));
      serviceBinder.AddMethod(__Method_GetCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.GetCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(serviceImpl.GetCharacter));
      serviceBinder.AddMethod(__Method_ListCharacters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.ListCharactersRequest, global::Ai.Inworld.Studio.V1Alpha.ListCharactersResponse>(serviceImpl.ListCharacters));
      serviceBinder.AddMethod(__Method_UpdateCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(serviceImpl.UpdateCharacter));
      serviceBinder.AddMethod(__Method_CreateCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.CreateCharacterRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(serviceImpl.CreateCharacter));
      serviceBinder.AddMethod(__Method_DeleteCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.DeleteCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCharacter));
      serviceBinder.AddMethod(__Method_ReplaceCharacterRpmModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.ReplaceCharacterRpmModelRequest, global::Ai.Inworld.Studio.V1Alpha.Character>(serviceImpl.ReplaceCharacterRpmModel));
      serviceBinder.AddMethod(__Method_PreviewPromptTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTemplateRequest, global::Ai.Inworld.Studio.V1Alpha.PreviewPromptTempalteResponse>(serviceImpl.PreviewPromptTemplate));
      serviceBinder.AddMethod(__Method_CheckDeployInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoRequest, global::Ai.Inworld.Studio.V1Alpha.CheckDeployInfoResponse>(serviceImpl.CheckDeployInfo));
      serviceBinder.AddMethod(__Method_GetCharacterAdvancedSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.GetCharacterAdvancedSettingsRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings>(serviceImpl.GetCharacterAdvancedSettings));
      serviceBinder.AddMethod(__Method_UpdateCharacterAdvancedSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.UpdateCharacterAdvancedSettingsRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterAdvancedSettings>(serviceImpl.UpdateCharacterAdvancedSettings));
      serviceBinder.AddMethod(__Method_ShareCharacter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ShareCharacter));
      serviceBinder.AddMethod(__Method_ShareCharacterPortal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.ShareCharacterPortalRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ShareCharacterPortal));
      serviceBinder.AddMethod(__Method_UnshareCharacterPortal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.UnshareCharacterPortalRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.UnshareCharacterPortal));
      serviceBinder.AddMethod(__Method_ListSharedCharacters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersRequest, global::Ai.Inworld.Studio.V1Alpha.ListSharedCharactersResponse>(serviceImpl.ListSharedCharacters));
      serviceBinder.AddMethod(__Method_GetCharacterShareInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Ai.Inworld.Studio.V1Alpha.GetCharacterShareInfoRequest, global::Ai.Inworld.Studio.V1Alpha.CharacterShareInfo>(serviceImpl.GetCharacterShareInfo));
    }

  }
}
#endregion
